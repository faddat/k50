%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: ff771ccdf4150419d9ff4d342b069aae, type: 3}
  m_Name: ProbeVolumes_03
  m_EditorClassIdentifier: 
  Title:
    m_Untranslated: Dilation
  m_Paragraphs:
    m_Items:
    - m_Type: 6
      Title:
        m_Untranslated: 
      Text:
        m_Untranslated: 
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 2800000, guid: dba7af2c858b3e8419de858d1f56abb5, type: 3}
      m_Video: {fileID: 0}
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
    - m_Type: 0
      Title:
        m_Untranslated: 
      Text:
        m_Untranslated: "Since the probe placement is automatic, some of them may
          end up inside objects or behind inaccessible parts of the Scene. Probes
          that sample backfaces are considered invalid and they may cause light leaking
          which produces unwanted bright or dark patches on the geometries. An example
          of this light leaking can be seen in the image above. Note that the wall
          itself is not affected because it's lit using lightmaps.\n\nThanks to the
          <b>Dilation</b> feature, the system can replace the invalid probes with
          valid data from neighboring probes, to prevent unwanted light leaking.\n\n\nTo
          reproduce the issue in the image above, let's disable the <b>Dilation</b>
          and rebake the lighting.\n\n1. Add a Cube at the following location: <b>X:17
          Y:2 Z:-2</b>\n\n2. Open <b>Window</b> > <b>Rendering</b> > <b>Lighting.</b>\n\n3.
          At the top of the <i>Lighting</i> window, select the <b>Probe Volumes</b>
          tab, and under <b>Probe Invalidity Settings,</b> uncheck <b>Enable Dilation.</b>\n\n4.
          Optionally, to speed up the rebaking of the lighting, choose a \"Draft\"
          or \"Medium\" <b>Lighting Settings Asset</b> under the <b>Scene</b> tab
          of the <i>Lighting</i> window. \n\n5. Click the <b>Generate Lighting</b>
          button at the bottom of the <i>Lighting</i> window to rebake the lighting.\n\nAfter
          several seconds, once the lighting has been rebaked, you will notice that
          invalid probes are now wrongly affecting the Cube, because the <b>Dilation</b>
          was turned off.\n\n6. <b>Enable Dilation</b> and generate the lighting
          again to get rid of the light leaking."
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 0}
      m_Video: {fileID: 0}
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
  m_CameraSettings:
    m_CameraMode: 1
    m_FocusMode: 0
    m_Orthographic: 0
    m_Size: 0.8660253
    m_Pivot: {x: 17.65045, y: 2.008143, z: -1.55602}
    m_Rotation: {x: -0.020402448, y: 0.94459444, z: -0.059666716, w: -0.32229057}
    m_FrameObject:
      m_SceneGuid: 
      m_GameObjectGuid: 
      m_SerializedComponentType:
        m_TypeName: 
      m_ComponentIndex: 0
      m_AssetObject: {fileID: 0}
      m_Prefab: {fileID: 0}
    m_Enabled: 1
  NextButton:
    m_Untranslated: Next
  DoneButton:
    m_Untranslated: Done
  m_CompletedSound: {fileID: 0}
  m_AutoAdvance: 0
  Showing:
    m_PersistentCalls:
      m_Calls: []
  Shown:
    m_PersistentCalls:
      m_Calls: []
  Staying:
    m_PersistentCalls:
      m_Calls: []
  CriteriaValidated:
    m_PersistentCalls:
      m_Calls: []
  MaskingSettingsChanged:
    m_PersistentCalls:
      m_Calls: []
  NonMaskingSettingsChanged:
    m_PersistentCalls:
      m_Calls: []
  m_OnBeforePageShown:
    m_PersistentCalls:
      m_Calls: []
  m_OnAfterPageShown:
    m_PersistentCalls:
      m_Calls: []
  m_OnTutorialPageStay:
    m_PersistentCalls:
      m_Calls: []
  m_OnBeforeTutorialQuit:
    m_PersistentCalls:
      m_Calls: []
  m_NextButton: 
  m_DoneButton: 
